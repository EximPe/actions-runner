name: Docker

on:
  schedule:
    - cron: '33 2 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    name: Release on Push
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessary to fetch all tags

      - name: Calculate next tag
        id: calc_tag
        run: |
          YEAR=$(date +"%y")
          WEEK=$(date +"%V")
          LAST_TAG=$(git tag -l "v$YEAR.$WEEK.*" | sort -V | tail -n1)
          LAST_TAG=$(echo "$LAST_TAG" | tr -d '\r' | sed 's/[[:space:]]*$//')
          echo "Last Tag: $LAST_TAG"
          if [[ $LAST_TAG == "" ]]; then
            MINOR=0
          else
            MINOR=$(echo $LAST_TAG | awk -F '.' '{print $NF}')
            echo "Minor Version: $MINOR"
            MINOR=$((MINOR + 1))
          fi
          TAG="v$YEAR.$WEEK.$MINOR"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Next Tag: $TAG"
      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$TAG" \
              --generate-notes

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Generate docker tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/eximpe/action-runner
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=${{TAG}}
            type=raw,value=latest
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            APP_VERSION=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache